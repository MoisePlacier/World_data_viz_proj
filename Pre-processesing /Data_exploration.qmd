---
title: "Data_exploration"
format: html
editor: visual
---

```{r}
library(stringi)
```


# Synthaxe pour la selection de colonnes ! 

colonnes_spécifiques <- grep("Contient_ce_String_1|Contient_ce_String_2", names(DT), value = TRUE)

=> retourne tous les noms de colonnes qui contiennent les expressions "Contient_ce_String_1" ou "Contient_ce_String_2"

dt_filtré <- DT[, colonnes_spécifiques] => pour filtrer les colonnes d'intêret ! 





```{r}
obj_name <- load("../data/data_cleaned.RData")
dt <- as.data.table(get(obj_name))
```

# Nettoyage de "Measure"
```{r}

# 1. Mettre en minuscules
dt[, Measure := tolower(Measure)]

# 2. Supprimer les accents
dt[, Measure := stri_trans_general(Measure, "Latin-ASCII")]

# 3. Supprimer les caractères spéciaux sauf alphanumériques et espaces
dt[, Measure := gsub("[^a-z0-9 ]", "", Measure)]

# 4. Remplacer les espaces par des underscores
dt[, Measure := gsub(" +", "_", Measure)]
```

# Nettoyage de Unit.of.measure

```{r}

# 1. Mettre en minuscules
dt[, Unit.of.measure := tolower(Unit.of.measure)]

# 2. Supprimer les accents
dt[, Unit.of.measure := stri_trans_general(Unit.of.measure, "Latin-ASCII")]

# 3. Supprimer les caractères spéciaux sauf alphanumériques et espaces
dt[, Unit.of.measure := gsub("[^a-z0-9 ]", "", Unit.of.measure)]

# 4. Remplacer les espaces par des underscores
dt[, Unit.of.measure := gsub(" +", "_", Unit.of.measure)]
```



```{r}
dt[, lapply(.SD, FUN = as.factor) , by = c("OBS_VALUE","TIME_PERIOD")]
```

# Selection de la page temporelle d'étude 
```{r}
dt <- dt[TIME_PERIOD >2015 & TIME_PERIOD < 2020]
```

```{r}
dt[, NobsPerCountry := .N, by = Reference.area]

```

# Selection de pays disposants de suffisemment de data
```{r}
dt <- dt[NobsPerCountry > 1000]
```

```{r}

dt <- dt[!(Reference.area %in% c("Malta", "Singapore", "Argentina"))]
```

```{r}
table( dt$Tableau, dt$Reference.area)
```



# deep dive Ressources_Sante

```{r}
ressources_Sante <- dt[Tableau == "Ressources_Sante"]
ressources_Sante
```
## summary pour compréhension des datas
```{r}
ressources_Sante[, list(moyenne = median(OBS_VALUE), maximum = max(OBS_VALUE), Tableau = Tableau), by = list(Reference.area, Measure, Unit.of.measure, Health.profession)]
```



## Identification des modalité professions à conserver 

### sur le critè dont OBS_Value = 0 

=> On peut enlever ça : pas informatif 
```{r}
ressources_Sante0 <- ressources_Sante[OBS_VALUE == 0]
table(ressources_Sante0$Health.profession)
```
### Autres professions dont on se fiche (ex : autre spécialiste non classifié etc...)

```{r}
table(ressources_Sante$Health.profession)
```

```{r}
ressources_Sante <- ressources_Sante[!(Health.profession %in% c("Medical doctors not further defined",
                                                                "Other generalist (non-specialist) medical practitioners",
                                                                "Other specialists not elsewhere classified",
                                                                "Associate professional nurses",
                                                                "Physicians",
                                                                "Healthcare assistants",
                                                                "Nurses",
                                                                "Other staff"
                                                                
                                                              ))]


```






## Selection des unités de mesures standardisées ! 

```{r}
ressources_Sante <- ressources_Sante[!(Unit.of.measure %in% c("us_dollars_ppp_converted",
                                                              "us_dollars_exchange_rate_converted",
                                                              "percentage_of_workers_in_the_same_health_profession_and_sex",
                                                              "persons_fulltime_equivalent",
                                                              "per_100000_inhabitants",
                                                              "per_1000_live_births",
                                                              "national_currency",
                                                              "percentage_of_workers_in_the_same_health_profession_and_sex",
                                                              "per_1000_practising_physicians_in_the_same_health_profession",
                                                              "persons"
                                                              ))]
```

## Création tableau ressources santé vezrsion wide 

```{r}
ressources_Sante_summary <- ressources_Sante[, 
  .(moyenne = median(OBS_VALUE,na.rm = TRUE)), 
  by = .(Reference.area, Measure, Unit.of.measure, Health.profession)
]

ressources_Sante_summary[, Tableau := "Ressources_Sante"]

ressources_Sante_summary
```


```{r}
ressources_Sante_wide <- dcast(
  ressources_Sante_summary,
  Reference.area ~ Tableau + Measure + Health.profession  + Unit.of.measure,
  value.var = "moyenne"
)

setnames(ressources_Sante_wide, gsub(" ", "_", names(ressources_Sante_wide)))
```





```{r}
# Compter le nombre de NA par colonne
na_count <- sapply(ressources_Sante_wide, function(y) sum(is.na(y)))

# Convertir en data.table pour avoir un résumé clair
na_count_dt <- data.table(
  variable = names(na_count),
  na_count = na_count
)

# Nombre total de lignes (valeurs) par colonne
na_count_dt[, total_count := nrow(ressources_Sante_wide)]

na_count_dt[, prop_na := na_count / total_count]

na_count_dt
```





#########################################################
# 2) Deepdive Qualite des soins
##########################################################

```{r}
Qualite_des_soins <- ressources_Sante <- dt[Tableau == "Qualite des soins"]
table(Qualite_des_soins$Unit.of.measure)
```



## 1ére approche :  selection des indicateurs de mesure de la qualité des soins par tx de NA


```{r}


Qualite_des_soins_summary2 <- Qualite_des_soins[, 
  .(moyenne = median(OBS_VALUE,na.rm = TRUE)), 
  by = .(Reference.area, Measure, Unit.of.measure)
]

Qualite_des_soins_summary2[, Tableau := "Qualite_des_soins"]

Qualite_des_soins_wide2 <- dcast(
  Qualite_des_soins_summary2,
  Reference.area ~ Tableau + Measure+ Unit.of.measure,
  value.var = "moyenne"
)

setnames(Qualite_des_soins_wide2, gsub(" ", "_", names(Qualite_des_soins_wide2)))

```


```{r}
dim(Qualite_des_soins_wide2)
```

```{r}

# Compter le nombre de NA par colonne
na_count <- sapply(Qualite_des_soins_wide2, function(y) sum(is.na(y)))

# Convertir en data.table pour avoir un résumé clair
na_count_dt <- data.table(
  variable = names(na_count),
  na_count = na_count
)

# Nombre total de lignes (valeurs) par colonne
na_count_dt[, total_count := nrow(Qualite_des_soins_wide2)]

na_count_dt[, prop_na := na_count / total_count]

na_count_dt
```



```{r}
# Sélectionner uniquement les indicateurs avec moins de 25% de NA
valid_indicators <- na_count_dt[prop_na < 0.25, as.character(variable)]
valid_indicators
```

```{r}
Qualite_des_soins_wide2 <- Qualite_des_soins_wide2[,..valid_indicators]
Qualite_des_soins_wide2
```

## Mapping avec des noms user friendly 

```{r}
mapping_QS <- data.table(
  original = c(
    "Qualite_des_soins_acute_myocardial_infarction_30_day_mortality_during_same_hospital_admission_unlinked_data_per_100_admissions",
    "Qualite_des_soins_acute_myocardial_infarction_30_day_mortality_in_and_out_of_hospital_linked_data_per_100_patients",
    "Qualite_des_soins_asthma_and_chronic_obstructive_pulmonary_disease_hospital_admission_per_100_000_inhabitants",
    "Qualite_des_soins_asthma_hospital_admission_per_100_000_inhabitants",
    "Qualite_des_soins_chronic_obstructive_pulmonary_disease_hospital_admission_per_100_000_inhabitants",
    "Qualite_des_soins_congestive_heart_failure_hospital_admission_per_100_000_inhabitants",
    "Qualite_des_soins_deprecated_congestive_heart_failure_and_hypertension_hospital_admission_per_100_000_inhabitants",
    "Qualite_des_soins_deprecated_hypertension_hospital_admission_per_100_000_inhabitants",
    "Qualite_des_soins_deprecated_lower_extremity_amputation_in_diabetic_patients_using_unlinked_data_per_100_000_inhabitants",
    "Qualite_des_soins_diabetes_hospital_admission_per_100_000_inhabitants",
    "Qualite_des_soins_haemorrhagic_stroke_30_day_mortality_during_same_hospital_admission_unlinked_data_per_100_admissions",
    "Qualite_des_soins_ischaemic_stroke_30_day_mortality_during_same_hospital_admission_unlinked_data_per_100_admissions",
    "Qualite_des_soins_obstetric_trauma_vaginal_delivery_with_instrument_per_100_deliveries",
    "Qualite_des_soins_obstetric_trauma_vaginal_delivery_without_instrument_per_100_deliveries",
    "Qualite_des_soins_total_volume_of_antibiotics_for_systemic_use_prescribed_defined_daily_dose_per_1_000_inhabitants_per_day",
    "Qualite_des_soins_volume_of_cephalosporines_and_quinolones_second_line_antibiotics_as_a_proportion_of_all_systemic_antibiotics_prescribed_percentage_of_defined_daily_doses_ddds_prescribed"
  ),
  friendly = c(
    "Qualite_des_soins_Cadiac_crisis_30_day_mortality_same_hospital",
    "Qualite_des_soins_Cadiac_crisis_30_day_mortality_in_out_hospital",
    "Qualite_des_soins_Asthma_COPD_hospital_admission",
    "Qualite_des_soins_Asthma_hospital_admission",
    "Qualite_des_soins_COPD_hospital_admission",
    "Qualite_des_soins_Congestive_Heart_Failure_hospital_admission",
    "Qualite_des_soins_Congestive_Heart_Failure_Hypertension_hospital_admission",
    "Qualite_des_soins_Hypertension_hospital_admission",
    "Qualite_des_soins_Diabetic_lower_extremity_amputation",
    "Qualite_des_soins_Diabetes_hospital_admission",
    "Qualite_des_soins_Haemorrhagic_stroke_30_day_mortality",
    "Qualite_des_soins_Ischaemic_stroke_30_day_mortality",
    "Qualite_des_soins_Obstetric_trauma_vaginal_with_instrument",
    "Qualite_des_soins_Obstetric_trauma_vaginal_without_instrument",
    "Qualite_des_soins_Total_antibiotics_volume_DDD_per_1000_inhabitants",
    "Qualite_des_soins_Second_line_antibiotics_proportion"
  ),
  category = c(
    "Mortalité",
    "Mortalité",
    "Hospitalisations_evitables",
    "Hospitalisations_evitables",
    "Hospitalisations_evitables",
    "Hospitalisations_evitables",
    "Hospitalisations_evitables",
    "Hospitalisations_evitables",
    "Hospitalisations_evitables",
    "Hospitalisations_evitables",
    "Mortalité",
    "Mortalité",
    "Sécurité_chirurgicale",
    "Sécurité_chirurgicale",
    "Médication",
    "Médication"
  )
)

# Combinaison friendly + catégorie
mapping_QS[, newname := paste0(friendly, "_", category)]

```

```{r}
setnames(Qualite_des_soins_wide2, old = mapping_QS$original, new = mapping_QS$newname)
```

```{r}
Qualite_des_soins_wide2
```



## 2ème approche :  selection des indicateurs de mesure de la qualité des soins par connaissance domaines 

```{r}
Qualite_des_soins <- ressources_Sante[!grepl("\\(Deprecated\\)", Measure)] # on enlève les indicateurs plus recommandé ni maintenu par l’OCDE (Deprecated)
```


###  Mortalité et réadmissions hospitalières

Ces indicateurs mesurent l’efficacité et la sécurité clinique :

"acute_myocardial_infarction_30_day_mortality_in_and_out_of_hospital_linked_data","haemorrhagic_stroke_30_day_mortality_in_and_out_of_hospital_linked_data","ischaemic_stroke_30_day_mortality_in_and_out_of_hospital_linked_data","congestive_heart_failure_allcause_mortality_within_365_days_after_discharge","congestive_heart_failure_allcause_hospital_readmissions_within_365_days_after_discharge"

Justification : ces indicateurs reflètent la qualité des soins critiques et les risques liés aux traitements hospitaliers.

####  Hospitalisations évitables / maladies chroniques

Ces indicateurs traduisent la prévention, la coordination des soins et la qualité de la prise en charge :

"asthma_hospital_admission","chronic_obstructive_pulmonary_disease_hospital_admission","diabetes_hospital_admission"

Justification : les admissions pour maladies chroniques évitables signalent un suivi insuffisant ou des soins primaires inefficaces.

###  Expérience et implication des patients

Ces indicateurs mesurent la qualité relationnelle et la participation aux décisions de soins :

"care_providers_involving_mental_health_patient_in_decisions_about_care_and_treatment_communitybased_care","care_providers_providing_easytounderstand_explanations_to_mental_health_patients_communitybased_care","care_providers_treating_mental_health_patients_with_courtesy_and_respect_communitybased_care","doctor_involving_patients_in_decisions_about_care_or_treatment","regular_doctor_giving_opportunity_to_ask_questions_or_raise_concerns"

Justification : la communication et l’implication des patients sont des dimensions essentielles de la qualité des soins selon l’OMS et l’OCDE.

###  Sécurité des procédures chirurgicales

"hipfracture_surgery_initiated_within_2_days_of_hospital_admission","deep_vein_thrombosis_following_hip_and_knee_replacement_within_30_days_of_surgery_linked_data","pulmonary_embolism_following_hip_and_knee_replacement_within_30_days_of_surgery_linked_data","sepsis_following_abdominopelvic_surgery_within_30_days_of_surgery_linked_data"

Justification : reflète la sécurité des soins chirurgicaux et le respect des bonnes pratiques.

###  Éliminer

Indicateurs financiers ou liés à l’usage de médicaments de masse (overall_volume_of_opioids_prescribed, total_volume_of_antibiotics_for_systemic_use_prescribed)

Les indicateurs sur la prescription pour sous-populations spécifiques si l’objectif est la qualité générale (elderly_patients_with_prescription_of_longacting_benzodiazepines)




```{r}
mapping <- data.table(
  original = c(
    "acute_myocardial_infarction_30_day_mortality_in_and_out_of_hospital_linked_data",
    "haemorrhagic_stroke_30_day_mortality_in_and_out_of_hospital_linked_data",
    "ischaemic_stroke_30_day_mortality_in_and_out_of_hospital_linked_data",
    "congestive_heart_failure_allcause_mortality_within_365_days_after_discharge",
    "congestive_heart_failure_allcause_hospital_readmissions_within_365_days_after_discharge",
    "asthma_hospital_admission",
    "chronic_obstructive_pulmonary_disease_hospital_admission",
    "diabetes_hospital_admission",
    "care_providers_involving_mental_health_patient_in_decisions_about_care_and_treatment_communitybased_care",
    "care_providers_providing_easytounderstand_explanations_to_mental_health_patients_communitybased_care",
    "care_providers_treating_mental_health_patients_with_courtesy_and_respect_communitybased_care",
    "doctor_involving_patients_in_decisions_about_care_or_treatment",
    "regular_doctor_giving_opportunity_to_ask_questions_or_raise_concerns",
    "hipfracture_surgery_initiated_within_2_days_of_hospital_admission",
    "deep_vein_thrombosis_following_hip_and_knee_replacement_within_30_days_of_surgery_linked_data",
    "pulmonary_embolism_following_hip_and_knee_replacement_within_30_days_of_surgery_linked_data",
    "sepsis_following_abdominopelvic_surgery_within_30_days_of_surgery_linked_data",
    "suicide_within_30_days_after_discharge_among_patients_diagnosed_with_a_mental_disorder"
  ),
  friendly = c(
    "30_day_mortality_AMI",
    "30_day_mortality_haemorrhagic_stroke",
    "30_day_mortality_ischaemic_stroke",
    "1yr_mortality_CHF",
    "1yr_readmission_CHF",
    "asthma_hospital_admission",
    "COPD_hospital_admission",
    "diabetes_hospital_admission",
    "mental_health_patient_involvement_community",
    "mental_health_clear_explanations_community",
    "mental_health_courtesy_respect_community",
    "doctor_patient_decision_involvement",
    "regular_doctor_questions_opportunity",
    "hip_fracture_surgery_within_2_days",
    "DVT_post_hip_knee_30days",
    "PE_post_hip_knee_30days",
    "sepsis_post_abdominopelvic_30days",
    "30_day_mortality_mental_disorder"
  ),
  category = c(
    "Mortalite","Mortalite","Mortalite","Mortalite","Readmissions",
    "Hospitalisations_evitables","Hospitalisations_evitables","Hospitalisations_evitables",
    "Experience_patient","Experience_patient","Experience_patient","Experience_patient","Experience_patient",
    "Sécurité_chirurgicale","Sécurité_chirurgicale","Sécurité_chirurgicale","Sécurité_chirurgicale","Mortalite"
  )
)

# Construction du nouveau nom : friendly + catégorie
mapping[, newname := paste0(friendly, "_", category)]
```


```{r}
# Ajouter une nouvelle colonne combinant friendly + catégorie
Qualite_des_soins[, Measure_friendly := mapping$friendly[match(Measure, mapping$original)]]
Qualite_des_soins[, Measure_category := mapping$category[match(Measure, mapping$original)]]

# Optionnel : concaténer friendly + catégorie dans une seule colonne
Qualite_des_soins[, Measure := paste0( Measure_category , "_", Measure_friendly)]
```

```{r}
Qualite_des_soins <- Qualite_des_soins_mapped[Measure!= "NA_NA"]
```


```{r}
table(Qualite_des_soins_mapped$Measure)
```
### Selection des Unitées de mesures 


```{r}
table(Qualite_des_soins$Unit.of.measure, Qualite_des_soins$Measure  )
```

### Tableau Qualité des soins wide

```{r}
Qualite_des_soins_summary <- Qualite_des_soins[, 
  .(moyenne = median(OBS_VALUE,na.rm = TRUE)), 
  by = .(Reference.area, Measure, Unit.of.measure)
]

Qualite_des_soins_summary[, Tableau := "Qualite_des_soins"]

Qualite_des_soins_summary
```


```{r}
Qualite_des_soins_wide <- dcast(
  Qualite_des_soins_summary,
  Reference.area ~ Tableau + Measure+ Unit.of.measure,
  value.var = "moyenne"
)

setnames(Qualite_des_soins_wide, gsub(" ", "_", names(Qualite_des_soins_wide)))
```


```{r}
Qualite_des_soins_wide
```






